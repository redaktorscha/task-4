{"version":3,"sources":["js\\propsorting.ts","js\\proprevsorting.ts","js\\remove_table.ts","js\\create_table.ts","js\\highlighter.ts","js\\get_header_index.ts","js\\img_toggle.ts","js\\clear_buttons.ts","js\\table_sort.ts"],"names":[],"mappings":"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","file":"table_sort.44c87253.map","sourceRoot":"..","sourcesContent":["import { ICat } from \"./interfaces\";\r\n// сортировка массива по возрастанию\r\nexport const propSorting = (arr: ICat[], prop: string): void => {\r\n    arr.sort(\r\n        function (x: ICat, y: ICat): number {\r\n            return x[prop] > y[prop] ? 1 : x[prop] < y[prop] ? -1 : 0;\r\n        }\r\n    );\r\n}\r\n","import { ICat } from \"./interfaces\";\r\n// сортировка массива по убыванию\r\nexport const propRevSorting = (arr: ICat[], prop: string): void => {\r\n    arr.sort(\r\n        function (a: ICat, b: ICat): number {\r\n            return b[prop] > a[prop] ? 1 : b[prop] < a[prop] ? -1 : 0;\r\n        }\r\n    );\r\n}","// удаление таблицы\r\nexport const removeTable = (): void => {\r\n    let el = document.getElementById('tbody');\r\n    if (el) {\r\n        el.remove();\r\n    }\r\n    let tbody2 = document.createElement('tbody');\r\n    tbody2.setAttribute('id', 'tbody');\r\n    let table = document.querySelector('#table');\r\n    if (table) {\r\n    table.appendChild(tbody2);\r\n    }\r\n}","import { ICat } from './interfaces';\r\n// создание таблицы\r\nexport const createTable = (arr: ICat[]): void => {\r\n    for (let i:number = 0; i < arr.length; i++) {\r\n            let tbody = (<HTMLTableElement>document.getElementById('tbody'));\r\n            let row = document.createElement('tr');\r\n        for (const prop in arr[i]) {\r\n            let value:string | number = arr[i][prop].toString();\r\n            let cell = document.createElement('td');\r\n            let text = document.createTextNode(value);\r\n            cell.appendChild(text);\r\n            row.appendChild(cell);\r\n        }\r\n        tbody.appendChild(row);\r\n    }\r\n}\r\n","// подсветка отсортированных колонок\r\nexport const highlighter = (index: number): void => {\r\n    let tbody = (<HTMLTableElement>document.getElementById('tbody'));\r\n    for (let j:number = 0; j < tbody.rows.length; j++) {\r\n        tbody.rows[j].cells[index].setAttribute('class', 'shadow');\r\n    }\r\n}\r\n","import { IEvent } from './interfaces';\r\n\r\n// поиск номера ячейки таблицы, которую нужно подсветить\r\nexport const getHeaderIndex = (e: IEvent): number => {\r\n    const closest = (e.target as HTMLElement).closest('th');\r\n    return closest ? closest.cellIndex : -1;\r\n}","// смена картинки на кнопке\r\nexport const imgToggle = (id: string, src: string): void => {\r\n    const button = document.getElementById(id);\r\n    if (button) {\r\n    button.classList.toggle(src);\r\n    }\r\n}","// возврат неактивных кнопок к первоначальной картинке\r\nexport const clearButtons = (nm: string): void => {\r\n    let buttons = document.getElementsByTagName('button');\r\n    for (let i:number = 0; i < buttons.length; i++) {\r\n        if (buttons[i].id !== nm) {\r\n            buttons[i].setAttribute('class', 'btn');\r\n        }\r\n    }\r\n}\r\n\r\n","import { ICat } from \"./interfaces\";\r\nimport { ISorted } from \"./interfaces\";\r\nimport { IEvent } from './interfaces';\r\nimport { propSorting } from \"./propsorting\";\r\nimport { propRevSorting } from \"./proprevsorting\";\r\nimport { removeTable } from './remove_table';\r\nimport { createTable} from './create_table';\r\nimport { highlighter } from './highlighter';\r\nimport { getHeaderIndex } from './get_header_index';\r\nimport { imgToggle } from './img_toggle';\r\nimport { clearButtons } from './clear_buttons';\r\n\r\nlet catsArray: ICat[] = [];\r\n\r\nlet sorted = {} as ISorted;\r\n\r\n// создает массив из объектов\r\nclass Cat implements ICat{\r\n     [prop: string]: string | number;\r\n    constructor(\r\n        public name: string,\r\n        public weight: number,\r\n        public color: string,\r\n        public gender: string,\r\n        public age: number\r\n    ) {        \r\n        catsArray.push(this);\r\n    }\r\n}\r\n\r\nnew Cat('Thomas', 10, 'grey', 'male', 8);\r\nnew Cat('Kitty', 5, 'red', 'female', 2);\r\nnew Cat('Max', 6, 'white', 'male', 12);\r\nnew Cat('Angel', 3, 'black', 'male', 1);\r\nnew Cat('Bella', 4, 'white', 'female', 5);\r\nnew Cat('Tabby', 7, 'whiskas', 'male', 2);\r\nnew Cat('Daisy', 3, 'beige', 'female', 5);\r\nnew Cat('Misty', 5, 'grey', 'female', 3);\r\nnew Cat('Spotty', 8, 'spotted', 'male', 6);\r\nnew Cat('Tiger', 9, 'red', 'male', 4);\r\n\r\n\r\n// сортировка таблицы по заданным критериям\r\nconst sortTable = (p: string): void => {\r\n    removeTable();\r\n    if (sorted.prop !== p || !sorted.state) {\r\n        propSorting(catsArray, p);\r\n        imgToggle(p, 'btn_asc');\r\n        sorted.state = true;\r\n    } else {\r\n        propRevSorting(catsArray, p);\r\n        imgToggle(p, 'btn_desc');\r\n        sorted.state = false;\r\n    }\r\n    sorted.prop = p;\r\n    createTable(catsArray);\r\n    clearButtons(p);\r\n}\r\n\r\n \r\n// что происходит по нажатии на конкретную кнопку\r\nconst onClick = (e: IEvent): void => {        \r\n        if ((e.target as HTMLElement).id) {\r\n        sortTable((e.target as HTMLElement).id);\r\n        highlighter(getHeaderIndex(e));\r\n    }\r\n}\r\n\r\n\r\nlet thead = document.querySelector('#thead');\r\nif (thead) {\r\n  thead.addEventListener('click', e => {\r\n    onClick(e)\r\n  });\r\n}\r\n\r\ncreateTable(catsArray);"]}